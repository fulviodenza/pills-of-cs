name: Staging Deployment

on:
  pull_request:
    branches:
    - 'release/**'

env:
  REGISTRY_HOST: 'registry.digitalocean.com/banach'
  IMAGE_NAME: 'pills-of-cs'
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkouts files
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.PAT }}

      - name: Set GH_SHA for versioning images, Required by docker-compose
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV
      
      - name: Build image
        run: docker build -t $(echo $REGISTRY_HOST)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) -f Dockerfile .

      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: fulviodenza/pills-of-cs
          tag_with_ref: true
          tag_with_sha: true

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to DO droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          envs: REGISTRY_HOST,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # curl -sSL https://get.docker.com/ | sudo sh
            # Login to registry all these stuff will never work at the first time
            # GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | head -c7)
            # docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # docker create -ti --name bot $(echo $REGISTRY_HOST)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA_SHORT) bash
            # sudo docker rm -f bot
            # docker system prune -af
            cd pills-of-cs && git checkout master && git pull
            # GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | head -c7) REGISTRY_HOST=$(echo $REGISTRY_HOST) docker-compose down --rmi all
            # GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | head -c7) REGISTRY_HOST=$(echo $REGISTRY_HOST) docker-compose -f docker-compose.yml pull
            # # Start up cluster
            # GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | head -c7) REGISTRY_HOST=$(echo $REGISTRY_HOST) docker-compose -f docker-compose.yml up -d
            # popd
            make start